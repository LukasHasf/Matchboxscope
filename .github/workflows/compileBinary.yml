name: Compile ESP32 bin
'on':
  - push
  - pull_request
jobs:
  build-esp32:
    strategy:
      matrix:
        arduino-platform:
          - 'esp32:esp32'
        include:
          - arduino-platform: 'esp32:esp32'
            fqbn: 'esp32:esp32:esp32'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1
      - name: Install platform
        run: >
          arduino-cli --additional-urls
          https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_dev_index.json
          core update-index

          arduino-cli --additional-urls
          https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_dev_index.json
          core install arduino:samd

          arduino-cli --additional-urls
          https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_dev_index.json
          core install esp32:esp32

          arduino-cli core update-index

          arduino-cli core install esp32:esp32
      - name: Compile Sketch
        run: |
          arduino-cli compile --fqbn esp32:esp32:esp32:PSRAM=enabled,PartitionScheme=min_spiffs,CPUFreq=240 ./ESP32/main/main.ino   --libraries ./ESP32/libraries/ --clean --build-path $PWD/build
          #arduino-cli compile --fqbn esp32:esp32:esp32:PSRAM=disabled,PartitionScheme=huge_app,CPUFreq=80  ./ESP32/main/main.ino --libraries ./ESP32/libraries/ --export-binaries
          $PWD/build  
          ls $PWD/build           
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: Upload-BIN
          path: /home/runner/work/Matchboxscope/Matchboxscope/build
      
      - name: auto-commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Updating latest .bin
